#!/usr/bin/env bash
bin="$(cd -- "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd -P)"
check="$bin"/check
for i in check; do
    [ ! -x "${!i}" ] && echo "$(basename "$0"): missing executable $i (${!i})" >&2 && exit 1
done
"$check" >/dev/null || exit 1
[ $# -lt 2 ] && echo "usage: $(basename "$0") <model checker> <model> [--mc_time=<limit>] [<model checker args>]" && exit 0

mkdir -p ${TMPDIR:-/tmp}/froleyks-certifaiger
TMP=$(mktemp -d "${TMPDIR:-/tmp}"/froleyks-certifaiger/$(basename "$0")-XXXXXXXX)
trap 'rm -rf "${TMP}"; exit' EXIT HUP INT QUIT TERM

if [[ $1 =~ --mc_time=([0-9]+) ]]; then
    limit="timeout ${BASH_REMATCH[1]} "
    shift 1
fi
MC="$1"
MODEL="$2"
NAME=$(basename "$MODEL" | sed 's/\.[^.]*$//')
if [ $# -ge 3 ] && [[ ! $3 == --* ]]; then
    SAT="$3"
    shift 1
else
    SAT=$TMP/${NAME}.sat
fi

echo $(basename "$0"): writing witness to "$SAT"
LOG=$TMP/${NAME}.log

shift 2
echo $(basename "$0"): running "$MC" on "$MODEL"
$limit $MC 100 "$MODEL" "$SAT" "$@" | tee "$LOG"
res=${PIPESTATUS[0]}
echo $(basename "$0"): model checker exit code $res
if [ $res -eq 124 ]; then
    echo $(basename "$0"): model checker timeout
    exit 0
fi
if ! [ $res -eq 0 ]; then
    echo $(basename "$0"): model checker failed
    exit 1
fi

"$check" "$MODEL" "$SAT"
